// <auto-generated />
using System;
using GenresApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenresApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200912095413_Genres")]
    partial class Genres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenresApp.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descriotion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Genre");
                });

            modelBuilder.Entity("GenresApp.Models.SubGenre", b =>
                {
                    b.HasBaseType("GenresApp.Models.Genre");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GenreId");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("SubGenre");
                });

            modelBuilder.Entity("GenresApp.Models.SubGenre", b =>
                {
                    b.HasOne("GenresApp.Models.Genre", null)
                        .WithMany("SubGenres")
                        .HasForeignKey("GenreId");

                    b.HasOne("GenresApp.Models.Genre", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
